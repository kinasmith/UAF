setwd("~/Documents/Projects/UA_FAIRBANKS/uaf_dendrometer/data/")
data = data.frame(read.csv("102_1.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
View(data)
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
View(data)
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/data$Ev)*L) #Calculate Position of Slider
plot(data$time_real[1:100],)
plot(n_at~time, data = data, main="n_at")
plot(val~time_real, data = dataTrim, main="val")
plot(Ev~time_real, data = dataTrim, main = "exciitation Voltage")
plot(val~time_real, data = data, main="val")
plot(Ev~time_real, data = data, main = "exciitation Voltage")
plot(val~time_real, data = data, main="val")
plot(Ev~time_real, data = data, main = "exciitation Voltage")
plot(temp~time_real, data=data, main="Temp")
View(data)
data = data.frame(read.csv("102_2.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/data$Ev)*L) #Calculate Position of Slider
plot(temp~time_real, data=data, main="Temp")
data = data.frame(read.csv("102_3.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
View(data)
data = data.frame(read.csv("102_4.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
View(data)
plot(data$temp)
data = data.frame(read.csv("102_5.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$temp)
data = data.frame(read.csv("102_1.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$temp)
data = data.frame(read.csv("102_2.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$temp)
data = data.frame(read.csv("102_3.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$temp)
data = data.frame(read.csv("102_4.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$temp)
data = data.frame(read.csv("102_5.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$temp)
data$time[0]
data$time[1]
for (i in 1:nrow(data)) {
data$rec_interval = data$time[i] - data$time[i-1]
}
}
View(data)
for (i in 1:nrow(data)) {
i
#data$rec_interval = data$time[i] - data$time[i-1]
}
for row in data.rows:
print data$time
for row in data.rows {
data$time
}
data$time
data$time[-1]
data$time[1]
rows(data)
rowlen(data)
numrows(data)
nrow(data)
for i in 1:nrow(data) {data$time[i]}
for (i in 1:nrow(data)) {data$time[i]}
for (i in 1:length(data$temp)) {
data$log_interval = data$time[i+1] - data$time[i]
}
View(data)
for (i in 1:length(data$temp)) {
data$log_interval = data$time[i]
}
View(data)
i = 0
for (i in 1:length(data$temp)) {
i++
data$log_interval = data$time[i]
}
View(data)
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i]
}
View(data)
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i] - data$time[i-1]
}
for (i in 2:length(data$temp)) {
data$log_interval[i] = data$time[i] - data$time[i-1]
}
View(data)
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
View(data)
plot(data$log_interval)
data = data.frame(read.csv("102_1.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
data = data.frame(read.csv("102_2.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
data = data.frame(read.csv("102_2.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
data = data.frame(read.csv("102_3.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
data = data.frame(read.csv("102_4.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
data = data.frame(read.csv("102_5.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
View(data)
plot(data$Ev)
data = data.frame(read.csv("102_1.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
plot(data$Ev)
data = data.frame(read.csv("102_2.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
plot(data$Ev)
plot(data$val)
data = data.frame(read.csv("102_1.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
plot(data$Ev)
plot(data$val)
View(data)
data = data.frame(read.csv("102_2.csv"))
#Sensor Address, Unix Time Stamp, ADC Value, Temperature, Battery Voltage, Excitation Voltage, Number of send attamps
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$temp)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
plot(data$Ev)
plot(data$val)
