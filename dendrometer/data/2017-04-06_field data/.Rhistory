setwd("~/Documents/Projects/UAF/dendrometer/data/2017-04-06_field data/")
data = data.frame(read.csv("101_2.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val)
plot(data$temp)
plot(data$val)
data = data.frame(read.csv("101_1.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val)
plot(data$temp)
plot(data$val~data$temp)
plot(data$temp)
plot(data$val)
plot(data$batt_v)
plot(data$count)
par(mfrow=c(2,2))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$count)
data = data.frame(read.csv("101_2.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(2,2))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$count)
data = data.frame(read.csv("101_3.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(2,2))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$count)
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$count)
plot(data$val)
plot(data$temp)
plot(data$temp)
plot(data$temp)
plot(data$val)
plot(data$temp)
data = data.frame(read.csv("101_1.csv"))
plot(data$temp)
data = data.frame(read.csv("101_1.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$val)
plot(data$temp)
plot(data$batt_v)
data = data.frame(read.csv("101_2.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
data = data.frame(read.csv("101_3.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
data = data.frame(read.csv("101_5.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$temp)
plot(data$val)
plot(data$temp)
plot(data$val)
plot(data$count)
plot(data$batt_v)
plot(data$val)
plot(data$temp)
data = data.frame(read.csv("101_6.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
data = data.frame(read.csv("100_1.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$val)
data = data.frame(read.csv("100_2.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$val)
data = data.frame(read.csv("100_3.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
data = data.frame(read.csv("100_4.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$val)
data = data.frame(read.csv("100_5.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$val)
data = data.frame(read.csv("100_6.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
data = data.frame(read.csv("100_7.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$temp)
plot(data$batt_v)
data = data.frame(read.csv("100_8.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
data = data.frame(read.csv("100_9.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
data = data.frame(read.csv("100_10.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
data = data.frame(read.csv("100_11.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
data = data.frame(read.csv("100_12.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
data = data.frame(read.csv("100_1.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$val~data$temp)
names(data) <- c("address", "time", "adc", "temp", "batt_v","count") #name data
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert the UNIX time stamp to POSIX time format
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$adc*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/Vref)*L) #Calculate Position of Slider
initPosition = data$position[1]
data$dia_change = (initPosition - data$position)/pi
plot(data$position)
plot(data$Iv)
plot(data$count)
plot(data$batt_v)
plot(data$dia_change)
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
change~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
help(plot)
help(par)
plot(data$time_real[1:100],)
plot(n_at~time, data = data, main="n_at")
plot(val~time_real, data = dataTrim, main="val")
plot(Ev~time_real, data = dataTrim, main = "exciitation Voltage")
plot(temp~time_real, data=data, main="Temp")
plot(val~time_real, data = data, main="val")
plot(batt_v~time_real, data = data, main = "battery")
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$adc*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/Vref)*L) #Calculate Position of Slider
initPosition = data$position[1]
data$dia_change = (initPosition - data$position)/pi
plot(data$position)
plot(data$Iv)
plot(data$count)
plot(data$batt_v)
plot(data$dia_change)
initPosition = data$position[1]
data$dia_change = (initPosition - data$position)/pi
plot(data$position)
plot(data$Iv)
plot(data$count)
plot(data$batt_v)
plot(data$Iv)
data$dia_change = (data$position - initPosition)/pi
plot(data$position)
plot(data$Iv)
plot(data$dia_change)
par(mfrow=c(1,1))
plot(data$position)
plot(data$Iv)
par(
cex = "1",
cex.sub="0.5",
lwd = "2"
)
plot(data$position)
plot(data$Iv)
plot(data$dia_change)
par(
cex = ".2",
cex.sub="0.5",
lwd = "2"
)
plot(data$position)
plot(data$Iv)
par(
cex = ".5",
cex.sub="0.5",
lwd = "2"
)
plot(data$position)
par(
cex = ".7",
cex.sub="0.5",
lwd = "2"
)
plot(data$Iv)
plot(data$dia_change)
data = data.frame(read.csv("100_5.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$count)
plot(data$val~data$temp)
names(data) <- c("address", "time", "adc", "temp", "batt_v","count") #name data
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert the UNIX time stamp to POSIX time format
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$adc*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/Vref)*L) #Calculate Position of Slider
initPosition = data$position[1]
data$dia_change = (data$position - initPosition)/pi
plot(data$position)
plot(data$Iv)
plot(data$dia_change)
data = data.frame(read.csv("101_5.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$count)
plot(data$val~data$temp)
names(data) <- c("address", "time", "adc", "temp", "batt_v","count") #name data
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert the UNIX time stamp to POSIX time format
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$adc*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/Vref)*L) #Calculate Position of Slider
initPosition = data$position[1]
data$dia_change = (data$position - initPosition)/pi
plot(data$position)
plot(data$Iv)
plot(data$dia_change)
data = data.frame(read.csv("100_12.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$count)
plot(data$val~data$temp)
names(data) <- c("address", "time", "adc", "temp", "batt_v","count") #name data
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert the UNIX time stamp to POSIX time format
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$adc*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/Vref)*L) #Calculate Position of Slider
initPosition = data$position[1]
data$dia_change = (data$position - initPosition)/pi
plot(data$position)
plot(data$Iv)
plot(data$dia_change)
data = data.frame(read.csv("100_8.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$count)
plot(data$val~data$temp)
names(data) <- c("address", "time", "adc", "temp", "batt_v","count") #name data
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert the UNIX time stamp to POSIX time format
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$adc*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/Vref)*L) #Calculate Position of Slider
initPosition = data$position[1]
data$dia_change = (data$position - initPosition)/pi
plot(data$position)
plot(data$Iv)
plot(data$dia_change)
data = data.frame(read.csv("100_2.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$count)
plot(data$val~data$temp)
names(data) <- c("address", "time", "adc", "temp", "batt_v","count") #name data
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert the UNIX time stamp to POSIX time format
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$adc*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/Vref)*L) #Calculate Position of Slider
initPosition = data$position[1]
data$dia_change = (data$position - initPosition)/pi
plot(data$position)
plot(data$Iv)
plot(data$dia_change)
data = data.frame(read.csv("100_5.csv"))
names(data) <- c("address", "time", "val", "temp", "batt_v","count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
par(mfrow=c(1,1))
plot(data$val)
plot(data$temp)
plot(data$batt_v)
plot(data$count)
plot(data$val~data$temp)
names(data) <- c("address", "time", "adc", "temp", "batt_v","count") #name data
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert the UNIX time stamp to POSIX time format
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$adc*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/Vref)*L) #Calculate Position of Slider
initPosition = data$position[1]
data$dia_change = (data$position - initPosition)/pi
plot(data$position)
plot(data$Iv)
plot(data$dia_change)
