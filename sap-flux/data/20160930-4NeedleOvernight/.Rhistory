setwd("~/Documents/Projects/UAF/sap-flux/data/20160930-4NeedleOvernight//")
data = data.frame(read.csv("Data05.csv"))
names(data) <- c("sensor_num", "time", "tc_1", "tc_2", "tc_3", "tc_h")
names(data) <- c("time","sensor_num", "time", "tc_1", "tc_2", "tc_3", "tc_h")
View(data)
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
View(data)
View(data)
View(data)
plot(data$log_interval)
plot(dataTrim$time)
plot(data$time)
plot(data$tc_1)
start = 20000
end = start+5000
subData = data[start:end,]
plot(subData$tc_1~subData$time)
start = 25000
end = start+5000
subData = data[start:end,]
plot(subData$tc_1~subData$time)
end = start+1000
subData = data[start:end,]
plot(subData$tc_1~subData$time)
plot(subData$tc_1~subData$time_real)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$sec, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$sec, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$sec, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(2,2))
plot(subData$tc_1~subData$sec, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$sec, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$sec, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_state~subData$sec, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
plot(subData$h_status~subData$sec, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$sec, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
start = 25000+(30*60)*1
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$sec, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
start = 25000+(30*60)*2
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$sec, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
start = 25000+(30*60)*0
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
start = 25000+(30*60)*0
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
(
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
)
plot(data$tc_1)
setwd("~/Documents/Projects/UAF/sap-flux/data/20160930-4NeedleOvernight//")
##--Load In Data--##
## 343 mA current
## 10.2 ohms
## >50% moisture content
data = data.frame(read.csv("Data05.csv"))
#check to make sure this is correct
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
plot(data$log_interval)
par(mfrow=c(1,1))
plot(data$log_interval)
par(mfrow=c(1,1))
plot(data$tc_1)
start = 1000+(30*60)*0
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
plot(subData$tc_1)
start = 1600+(30*60)*0
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
plot(subData$tc_1)
start = 1700+(30*60)*0
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
plot(subData$tc_1)
start = 1700+(30*60)*2
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
plot(subData$tc_1)
start = 1700+(30*60)*20
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
plot(subData$tc_1)
start = 1700+(30*60)*100
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
plot(subData$tc_1)
start = 1700+(30*60)*50
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
plot(subData$tc_1)
start = 1700+(30*60)*40
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
start = 1700+(30*60)*10
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
start = 1700+(30*60)*10
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
par(mfrow=c(1,1))
plot(data$tc_1)
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
setwd("~/Documents/Projects/UAF/sap-flux/data/20160930-4NeedleOvernight//")
##--Load In Data--##
## 343 mA current
## 10.2 ohms
## >50% moisture content
data = data.frame(read.csv("Data05.csv"))
#check to make sure this is correct
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
par(mfrow=c(1,1))
plot(data$tc_1)
start = 1700+(30*60)*10
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(1,1))
plot(data$tc_1)
start = 1700+(30*60)*10
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
setwd("~/Documents/Projects/UAF/sap-flux/data/20160930-4NeedleOvernight//")
##--Load In Data--##
setwd("~/Documents/Projects/UAF/sap-flux/data/20160930-4NeedleOvernight//")
##--Load In Data--##
## 343 mA current
## 10.2 ohms
## >50% moisture content
data = data.frame(read.csv("Data05.csv"))
setwd("~/Documents/Projects/UAF/sap-flux/data/20160930-4NeedleOvernight/")
data = data.frame(read.csv("Data05.csv"))
setwd("~/Documents/Projects/UAF/sap-flux/data/20160930-4NeedleOvernight/")
setwd("~/Documents/Projects/UAF/sap-flux/data/20160930-4NeedleOvernight/")
##--Load In Data--##
## 343 mA current
## 10.2 ohms
## >50% moisture content
data = data.frame(read.csv("Data05.csv"))
#check to make sure this is correct
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
par(mfrow=c(1,1))
plot(data$tc_1)
start = 00+(30*60)*0
end = start+7000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(1,1))
plot(data$tc_1)
View(data)
start = 00+(30*60)*0
end = start+7000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
setwd("~/Documents/Projects/UAF/sap-flux/data/20160930-4NeedleOvernight/")
##--Load In Data--##
## 343 mA current
## 10.2 ohms
## >50% moisture content
data = data.frame(read.csv("Data05.csv"))
#check to make sure this is correct
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
par(mfrow=c(1,1))
plot(data$tc_1)
par(mfrow=c(1,1))
plot(data$tc_1)
start = 00+(30*60)*20
end = start+1000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
start = (30*60)*20
end = start+1200
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
start = (30*60)*23
end = start+1200
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(data$tc_1)
start = (30*60)*23
end = start+1200
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
start = (30*60)*23
end = start+800
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
start = (30*60)*10
end = start+800
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
start = (30*60)*30
end = start+800
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
end = start + (30*60000)
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
start = (30*60)*20
#end = start+800
end = start + (30*60000)
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
start = (30*60)*20
#end = start+800
end = start + (30*6000)
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
start = (30*60)*20
end = start+800
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
start = (30*60)*30
end = start+800
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
start = (30*60)*31
end = start+800
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
start = (30*60)*30
end = start+800
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = max(subData$tc_1) + 0.1
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
