?INSTALL
R CMD INSTALL RJSONIO -l ~/Documents/R_packages/RJSON_1.3-0.tgz
install.packages("RJSONIO_1.3-0",lib="~/Documents/R_packages/")
install.packages("RJSONIO",lib="~/Documents/R_packages/")
library(RJSONIO)
`14` <- read.csv("~/Documents/Projects/UAF/uaf_dendrometer/data/test/2016.03.09/14.CSV", header=FALSE)
View(`14`)
View(`14`)
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "AST") #Convert time to POSIX
setwd("~/Documents/Projects/PERSONAL/Home Automation/data/")
data0 = data.frame(read.csv("2016-11-18/101_0.csv"))
data1 = data.frame(read.csv("2016-11-18/101_1.csv"))
data9 = data.frame(read.csv("2016-11-18/101_9.csv"))
data7 = data.frame(read.csv("2016-11-18/101_7.csv"))
#check to make sure this is correct
names(data0) <- c("id", "time", "temp")
names(data1) <- c("id", "time", "temp", "humidity", "voltage", "cnt")
names(data9) <- c("id", "time", "temp", "humidity", "voltage", "cnt")
names(data7) <- c("id", "time", "temp", "humidity", "voltage", "cnt")
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "AST") #Convert time to POSIX
View(data0)
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "PST") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "PST") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "AST") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "Alaska") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "Alaska") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "GMT-9") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "GMT-9") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "GMT") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "GMT") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "-9") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "-9") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", tz = "-9") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "Alaska") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "Alaska") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "Europe/London") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "Europe/London") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "+01:00") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "+01:00") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "America/Anchorage") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "America/Anchorage") #Convert time to POSIX
View(data0)
data1$time_real = as.POSIXct(data1$time, origin="1970-01-01") #Convert time to POSIX
View(data1)
View(data0)
data1$time_real = as.POSIXct(data1$time, origin="1970-01-01", "America/Adak") #Convert time to POSIX
View(data0)
View(data1)
View(data1)
View(data0)
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "Asia/Chita") #Convert time to POSIX
View(data0)
data9$time_real = as.POSIXct(data9$time, origin="1970-01-01") #Convert time to POSIX
View(data0)
View(data1)
View(data0)
View(data1)
View(data7)
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "Asia/Chita") #Convert time to POSIX
data1$time_real = as.POSIXct(data1$time, origin="1970-01-01", "America/Adak") #Convert time to POSIX
data9$time_real = as.POSIXct(data9$time, origin="1970-01-01") #Convert time to POSIX
data7$time_real = as.POSIXct(data7$time, origin="1970-01-01") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "Asia/Jayapura") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "Asia/Jayapura") #Convert time to POSIX
View(data0)
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "") #Convert time to POSIX
View(data0)
View(data1)
View(data0)
View(data1)
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "") #Convert time to POSIX
data1$time_real = as.POSIXct(data1$time, origin="1970-01-01", "") #Convert time to POSIX
data0$time_real = as.POSIXct(data0$time, origin="1970-01-01", "") #Convert time to POSIX
data1$time_real = as.POSIXct(data1$time, origin="1970-01-01", "") #Convert time to POSIX
View(data0)
View(data1)
View(data0)
setwd("~/Documents/Projects/PERSONAL/Home Automation/data/2016-12-7/")
data1 = data.frame(read.csv("101_1.csv"))
data9 = data.frame(read.csv("101_9.csv"))
data7 = data.frame(read.csv("101_7.csv"))
names(data1) <- c("id", "time", "temp", "humidity", "voltage", "cnt")
names(data9) <- c("id", "time", "temp", "humidity", "voltage", "cnt")
names(data7) <- c("id", "time", "temp", "humidity", "voltage", "cnt")
data1$time_real = as.POSIXct(data1$time, origin="1970-01-01", "America/Anchorage") #Convert time to POSIX
data9$time_real = as.POSIXct(data9$time, origin="1970-01-01", "America/Anchorage") #Convert time to POSIX
data7$time_real = as.POSIXct(data7$time, origin="1970-01-01", "America/Anchorage") #Convert time to POSIX
data1$temp = data1$temp * (9/5)+32
data9$temp = data9$temp * (9/5)+32
data7$temp = data7$temp * (9/5)+32
dateTime1 <- strptime("0:00 2016/12/1", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("24:00 2016/12/28", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
plot(subData1$time_real, subData1$temp)
plot(subData7$temp)
dateTime1 <- strptime("0:00 2016/12/6", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("24:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
plot(subData7$temp)
plot(subData7$humidity)
View(data7)
plot(subData7$voltage)
plot(data7$voltage)
plot(data7$cnt)
plot(data1$cnt)
plot(data9$cnt)
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
lines(subData7$time_real,subData7$temp,col="blue", type='p', pch=1, cex=.5)
min = min(subData7$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
lines(subData7$time_real,subData7$temp,col="blue", type='p', pch=1, cex=.5)
abline(h = 1)
abline(h=15)
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
dateTime1 <- strptime("0:00 2016/12/2", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("24:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
plot(subData7$temp)
plot(subData7$humidity)
plot(data9$cnt)
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
dateTime1 <- strptime("0:00 2016/12/6", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("24:00 2016/12/6", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
plot(subData7$temp)
plot(subData7$humidity)
plot(data9$cnt)
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
dateTime1 <- strptime("0:00 2016/12/6", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("24:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
min = min(subData9$temp) - 1
dateTime1 <- strptime("17:00 2016/12/6", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("24:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
dateTime1 <- strptime("17:00 2016/12/6", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("8:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
#lines(subData7$time_real,subData7$temp,col="blue", type='p', pch=1, cex=.5)
dateTime1 <- strptime("17:00 2016/12/6", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("7:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
abline(h = 18* (9/5) + 32)
abline(h=12* (9/5)+32)
setwd("~/Documents/Projects/PERSONAL/Home Automation/data/2016-12-7/")
data1 = data.frame(read.csv("101_1.csv"))
data9 = data.frame(read.csv("101_9.csv"))
data7 = data.frame(read.csv("101_7.csv"))
#check to make sure this is correct
names(data1) <- c("id", "time", "temp", "humidity", "voltage", "cnt")
names(data9) <- c("id", "time", "temp", "humidity", "voltage", "cnt")
names(data7) <- c("id", "time", "temp", "humidity", "voltage", "cnt")
data1$time_real = as.POSIXct(data1$time, origin="1970-01-01", "America/Anchorage") #Convert time to POSIX
data9$time_real = as.POSIXct(data9$time, origin="1970-01-01", "America/Anchorage") #Convert time to POSIX
data7$time_real = as.POSIXct(data7$time, origin="1970-01-01", "America/Anchorage") #Convert time to POSIX
#°C  x  9/5 + 32 = °F
#data1$temp = data1$temp * (9/5)+32
#data9$temp = data9$temp * (9/5)+32
#data7$temp = data7$temp * (9/5)+32
dateTime1 <- strptime("17:00 2016/12/6", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("7:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
#lines(subData7$time_real,subData7$temp,col="blue", type='p', pch=1, cex=.5)
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
#lines(subData7$time_real,subData7$temp,col="blue", type='p', pch=1, cex=.5)
abline(h = 18)
abline(h=15)
dateTime1 <- strptime("17:00 2016/12/1", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("7:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
#lines(subData7$time_real,subData7$temp,col="blue", type='p', pch=1, cex=.5)
abline(h = 18)
abline(h=15)
dateTime1 <- strptime("17:00 2016/12/6", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("7:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
#lines(subData7$time_real,subData7$temp,col="blue", type='p', pch=1, cex=.5)
abline(h = 18)
abline(h=15)
dateTime1 <- strptime("17:00 2016/12/1", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("7:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
dateTime1 <- strptime("17:00 2016/12/5", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("7:00 2016/12/7", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
subData1 <- data1[data1$time_real < dateTime2 & data1$time_real > dateTime1, ]
subData9 <- data9[data9$time_real < dateTime2 & data9$time_real > dateTime1, ]
subData7 <- data7[data7$time_real < dateTime2 & data7$time_real > dateTime1, ]
min = min(subData9$temp) - 1
max = max(subData9$temp) + 1
plot(subData1$time_real,subData1$temp,col="red", type='p', pch=1, cex=.5, ylim=c(min, max))
lines(subData9$time_real,subData9$temp,col="green", type='p', pch=1, cex=.5)
#lines(subData7$time_real,subData7$temp,col="blue", type='p', pch=1, cex=.5)
abline(h = 18)
abline(h=15)
setwd("~/Documents/Projects/UAF/sap-flux/data/20161024-overnight_650mA//")
data = data.frame(read.csv("Data22.csv"))
setwd("~/Documents/Projects/UAF/sap-flux/data/20161024-overnight_650mA//")
data = data.frame(read.csv("Data22.csv"))
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
par(mfrow=c(1,1))
plot(data$tc_1)
start = (30*60)*0
end = start+400
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
par(mfrow=c(1,1))
plot(data$tc_1)
start = (30*60)*0
end = start+400
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
#max = max(subData$tc_1) + 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
#Plot all 4 Sensors
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
#plot all of Upstream
par(mfrow=c(1,1))
plot(data$tc_1)
end =- start+20000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
#max = max(subData$tc_1) + 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
#plot all of Upstream
par(mfrow=c(1,1))
plot(data$tc_1)
#plot single event of Upstream
start = (30*60)*0
#end = start+400
end =- start+2000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
#max = max(subData$tc_1) + 0.1
max = min + 1.2
#plot single event of Upstream
start = (30*60)*0
#end = start+400
end =- start+2000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
#max = max(subData$tc_1) + 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
