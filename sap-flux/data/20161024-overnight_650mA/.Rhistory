type = "l"
)
data = data.frame(read.csv("100_8.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/data$Ev)*L) #Calculate Position of Slider
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:11]
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
change~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
data = data.frame(read.csv("100_9.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/data$Ev)*L) #Calculate Position of Slider
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:11]
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
change~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
data = data.frame(read.csv("100_10.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/data$Ev)*L) #Calculate Position of Slider
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:11]
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
change~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
data = data.frame(read.csv("100_11.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/data$Ev)*L) #Calculate Position of Slider
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:11]
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
change~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
data = data.frame(read.csv("100_8.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/data$Ev)*L) #Calculate Position of Slider
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:11]
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
change~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
data = data.frame(read.csv("100_12.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/data$Ev)*L) #Calculate Position of Slider
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:11]
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
change~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
data = data.frame(read.csv("100_4.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/data$Ev)*L) #Calculate Position of Slider
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:11]
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
change~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
data = data.frame(read.csv("100_11.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "batt_v", "Ev", "n_at")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
Vref = 2.048 #ADC Voltage Reference
N = 16 #ADC Set to 16 bit resolution
LSB = ((2*Vref)/2^N) #Least Significant Bit (in volts)
PGA = 1 #Programmable Gain Amplifier (Set to 1)
L = 50 #Length of Linear Sensor
data$Iv = data$val*(LSB/PGA) #Caluclate Input Voltage (Iv)
data$position = ((data$Iv/data$Ev)*L) #Calculate Position of Slider
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:11]
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
change~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
View(data)
data$dbh = data$change+40
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
change~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
plot(
dbh~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
plot(
data$dbh~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:11]
data$dbh = data$change+40
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
dbh~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
View(dataTrim)
dataTrim = data[0:(nrow(data)-1),0:12]
data$dbh = data$change+40
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
dbh~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
data$dbh = data$change+24.7
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
dbh~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:12]
data$dbh = data$change+24.7
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
dbh~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Millimeters",
type = "l"
)
plot(
dbh~time_real,
data = dataTrim,
main="Change in Diameter",
sub="dendro_100.4",
xlab="Time",
ylab="Diameter (mm)",
type = "l"
)
plot(
dbh~time_real,
data = dataTrim,
main="Change in Diameter",
xlab="Time",
ylab="Diameter (mm)",
type = "l"
)
plot(data$time_real[1:100],)
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:12]
data$dbh = data$change+24.7
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
dbh~time_real,
data = dataTrim,
main="Change in Diameter",
xlab="Time",
ylab="Diameter (mm)",
type = "l"
)
data$change = data[,10] - data[1,10] #calculate the change in diameter of the tree
dataTrim = data[0:(nrow(data)-1),0:12]
data$dbh = data$change+24.7
par(
cex = "1.1",
cex.sub="0.8",
lwd = "2"
)
plot(
dbh~time_real,
data = dataTrim,
main="Change in Diameter",
xlab="Date",
ylab="Diameter (mm)",
type = "l"
)
setwd("~/Documents/Projects/UAF/sap-flux/data/20161024-overnight_650mA//")
data = data.frame(read.csv("Data22.csv"))
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
par(mfrow=c(1,1))
plot(data$tc_1)
start = (30*60)*0
end =- start+2000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
max(subData$tc_1)
max(subData$tc_3)
max(subData$tc_2)
setwd("~/Documents/Projects/UAF/sap-flux/data/20161024-overnight_650mA//")
data = data.frame(read.csv("Data22.csv"))
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
par(mfrow=c(1,1))
plot(data$tc_1)
start = (30*60)*0
end =- start+2000
start = (30*60)*10
end =- start+2000
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
end =- start+1500
start = (30*60)*10
end =- start+1500
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
setwd("~/Documents/Projects/UAF/sap-flux/data/2017-01-25 testing//")
long = data.frame(read.csv("105_21.csv"))
names(long) <- c("id", "time", "t1", "t2", "t3", "t_int", "batV", "cnt")
long$time_real = as.POSIXct(long$time, origin="1970-01-01", "America/Anchorage") #Convert time to POSIX
plot(long$t1~long$time_real, ylim=c(0, 20))
lines(long$cnt~long$time_real)
setwd("~/Documents/Projects/UAF/sap-flux/data/2017-02-08/")
d = data.frame(read.csv("100_27.csv"))
names(d) <- c("id", "time", "t1", "t2", "t3", "t_int", "batV", "cnt")
d$time_real = as.POSIXct(d$time, origin="1970-01-01", "America/Anchorage") #Convert time to POSIX
dateTime1 <- strptime("7:00 2017/2/08", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
dateTime2 <- strptime("7:30 2017/2/08", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
sub <- d[d$time_real < dateTime2 & d$time_real > dateTime1, ]
subStart = sub[1,2]
sub$time = sub$time - subStart
min = min(sub$t1) - 0.1
max = min + 20
par(mfrow=c(3,1))
plot(sub$t1~sub$time, type='p', pch=1, cex=0.7, ylim=c(min(sub$t1) - 0.1, min(sub$t1) + 3), main="Above Heater")
plot(sub$t2~sub$time, type='p', pch=1, cex=0.7, ylim=c(min(sub$t2) - 0.1, min(sub$t2) + 3), main="Below Heater")
plot(sub$t3~sub$time, type='p', pch=1, cex=0.7, ylim=c(min(sub$t3) - 0.1, min(sub$t3) + 6), main="Beside Heater")
setwd("~/Documents/Projects/UAF/sap-flux/data/20161024-overnight_650mA//")
data = data.frame(read.csv("Data22.csv"))
names(data) <- c("time", "tc_1", "tc_2", "tc_3", "h_status")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
for (i in 1:length(data$time)) {
data$log_interval[i] = data$time[i+1] - data$time[i]
}
par(mfrow=c(1,1))
plot(data$tc_1)
start = (30*60)*10
end =- start+1500
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
start = (30*60)*30
end =- start+1500
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
end =- start+800
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
start = (30*60)*30
end =- start+800
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
start = (30*60)*0
end =- start+800
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
end =- start+200
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
end =- start+400
subData = data[start:end,]
min = min(subData$tc_1) - 0.1
max = min + 1.2
par(mfrow=c(1,1))
plot(subData$tc_1)
par(mfrow=c(2,2))
plot(subData$tc_1~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="downstream")
plot(subData$tc_2~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="side")
plot(subData$tc_3~subData$time_real, type='p', pch=1, cex=.5, ylim=c(min, max), main="upstream")
plot(subData$h_status~subData$time_real, type='p', pch=1, cex=.5, ylim=c(0, 1), main="heater")
