setwd("~/Documents/Projects/UAF/dendrometer/data/2017-03-07-testing/")
data = data.frame(read.csv("101_1.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, type = "l", ylim=c(0,500))
plot(data$temp~data$time_real, type = "l", ylim=c(15,25))
plot(data$battery~data$time_real, type = "l", ylim=c(0, 3.5))
plot(data$time_real, type = "l")
plot(data$count~data$time_real, type = "l")
plot(data$val~data$time_real, type = "l", ylim=c(0,500))
plot(data$temp~data$time_real, type = "l", ylim=c(15,25))
plot(data$battery~data$time_real, type = "l", ylim=c(0, 3.5))
plot(data$time_real, type = "l")
plot(data$count~data$time_real, type = "l")
data = data.frame(read.csv("101_2.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, type = "l", ylim=c(0,500))
plot(data$temp~data$time_real, type = "l", ylim=c(15,25))
plot(data$battery~data$time_real, type = "l", ylim=c(0, 3.5))
plot(data$time_real, type = "l")
plot(data$count~data$time_real, type = "l")
data = data.frame(read.csv("101_3.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, type = "l", ylim=c(0,500))
plot(data$temp~data$time_real, type = "l", ylim=c(15,25))
plot(data$temp~data$time_real, type = "l", ylim=c(15,25))
plot(data$battery~data$time_real, type = "l", ylim=c(0, 3.5))
plot(data$time_real, type = "l")
plot(data$count~data$time_real, type = "l")
plot(data$val~data$time_real, type = "l", ylim=c(0,500))
plot(data$temp~data$time_real, type = "l", ylim=c(15,25))
data = data.frame(read.csv("101_4.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, type = "l", ylim=c(0,500))
plot(data$temp~data$time_real, type = "l", ylim=c(15,25))
plot(data$battery~data$time_real, type = "l", ylim=c(0, 3.5))
plot(data$time_real, type = "l")
data = data.frame(read.csv("101_5.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, type = "l", ylim=c(0,500))
plot(data$temp~data$time_real, type = "l", ylim=c(15,25))
plot(data$battery~data$time_real, type = "l", ylim=c(0, 3.5))
plot(data$time_real, type = "l")
plot(data$count~data$time_real, type = "l")
data = data.frame(read.csv("101_6.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, type = "l", ylim=c(0,500))
plot(data$temp~data$time_real, type = "l", ylim=c(15,25))
plot(data$battery~data$time_real, type = "l", ylim=c(0, 3.5))
plot(data$time_real, type = "l")
plot(data$count~data$time_real, type = "l")
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
data = data.frame(read.csv("101_4.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
data = data.frame(read.csv("100_1.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
data = data.frame(read.csv("100_2.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$temp~data$time_real, ylim=c(15,25))
data = data.frame(read.csv("100_3.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
data = data.frame(read.csv("100_4.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
data = data.frame(read.csv("100_5.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
dateTime1 <- strptime("0:00 2016/1/01", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
data = data.frame(read.csv("100_6.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
data = data.frame(read.csv("100_7.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
dateTime1 <- strptime("0:00 2016/1/01", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
data = data.frame(read.csv("100_8.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
dateTime1 <- strptime("0:00 2016/1/01", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
data = data.frame(read.csv("100_9.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
dateTime1 <- strptime("0:00 2016/1/01", format="%H:%M %Y/%m/%d", tz="America/Anchorage")
data = data.frame(read.csv("100_10.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
data = data.frame(read.csv("100_11.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$battery~data$time_real, ylim=c(0, 3.5))
data = data.frame(read.csv("100_12.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
data = data.frame(read.csv("101_1.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
o
o
o
setwd("~/Documents/Projects/UAF/dendrometer/data/2017-03-07-testing/")
data = data.frame(read.csv("101_1.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
data = data.frame(read.csv("101_2.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
data = data.frame(read.csv("101_3.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
View(data)
plot(data$count)
plot(data$time_real)
data = data.frame(read.csv("101_10.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$time_real)
View(data)
setwd("~/Documents/Projects/UAF/dendrometer/data/2017-03-07-testing/")
data = data.frame(read.csv("101_10.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count)
View(data)
plot(data$count~data$time_real)
data = data.frame(read.csv("101_11.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
View(data)
data = data.frame(read.csv("101_11.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
View(data)
data = data.frame(read.csv("101_12.csv"))
names(data) <- c("sensor_num", "time", "val", "temp", "battery", "count")
data$time_real = as.POSIXct(data$time, origin="1970-01-01") #Convert time to POSIX
plot(data$val~data$time_real, ylim=c(0,500))
plot(data$temp~data$time_real, ylim=c(15,25))
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$battery~data$time_real, ylim=c(0, 3.5))
plot(data$time_real)
plot(data$count~data$time_real)
setwd("~/Documents/Projects/UAF/sap-flux/data/2017-03-08-invert-testing/")
d = data.frame(read.csv("test.csv"))
names(d) <- c("id", "time", "t1", "t2", "t3", "t_int", "batV", "cnt")
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1)
plot(d$tc2)
plot(d$tc3)
plot(d$int1)
plot(d$tc1, ylim=c(20, 25))
plot(d$tc1, ylim=c(10, 25))
plot(d$tc1, ylim=c(10, 30))
plot(d$tc1)
plot(d$tc2,)
plot(d$tc2)
plot(d$tc3)
plot(d$int1)
plot(d$int2)
plot(d$int3)
d = data.frame(read.csv("test.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1)
plot(d$tc2)
plot(d$tc3)
plot(d$int1)
plot(d$int2)
plot(d$int3)
plot(d$tc1)
plot(d$tc2)
plot(d$tc3)
plot(d$int1)
plot(d$tc1)
plot(d$tc2)
line(d$int1)
lines(d$int1)
plot(d$int1)
plot(d$tc1, type="l", col="red")
lines(d$int1, col="green")
plot(d$int1, col="green")
plot(d$tc1, col="red")
points(d$int1, col="green")
plot(d$tc1, col="red", ylim=c(16, 25))
points(d$int1, col="green")
d = data.frame(read.csv("test_10ohm_air.csv.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 25))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 25))
points(d$int1, col="green")
d = data.frame(read.csv("test_10ohm_air.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 25))
points(d$int1, col="green")
d = data.frame(read.csv("test_10ohm_air_noRes.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 25))
points(d$int1, col="green")
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
plot(d$tc2)
plot(d$tc3)
plot(d$int1)
plot(d$int2)
plot(d$int3)
plot(d$tc2)
plot(d$tc3)
plot(d$tc1, col="red", ylim=c(16, 27))
d = data.frame(read.csv("test_10ohm_air.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
d = data.frame(read.csv("test_15ohm.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeE.csv.csv"))
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeE.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
plot(d$tc2)
plot(d$tc3)
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeE_onChip.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
plot(d$tc2)
plot(d$tc2)
par(mfrow=c(1,2))
plot(d$tc2)
par(mfrow=c(2,1))
plot(d$tc2)
plot(d$int2)
plot(d$tc3)
plot(d$int3)
setwd("~/Documents/Projects/UAF/sap-flux/data/2017-03-08-invert-testing/")
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip.csv"))
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip.asc"))
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip.asc"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
par(mfrow=c(2,1))
plot(d$tc2)
plot(d$int1)
plot(d$int1)
plot(d$tc2)
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip.asc"))
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip.asc"))
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip.asc"))
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip.csv"))
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
plot(d$tc2)
par(mfrow=c(2,1))
plot(d$tc2)
plot(d$int2)
plot(d$int1)
par(mfrow=c(3,1))
plot(d$int1)
plot(d$int2)
plot(d$int3)
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeE_onChip.csv"))
par(mfrow=c(3,1))
plot(d$tc2)
plot(d$tc3)
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
par(mfrow=c(3,1))
plot(d$int1)
plot(d$int2)
plot(d$int3)
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
plot(d$tc1, col="red", ylim=c(16, 27))
par(mfrow=c(3,1))
plot(d$int1)
plot(d$int2)
plot(d$int3)
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip_cutAway.asc"))
setwd("~/Documents/Projects/UAF/sap-flux/data/2017-03-08-invert-testing/")
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip_cutAway.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
par(mfrow=c(3,1))
plot(d$int1)
plot(d$int2)
plot(d$int3)
plot(d$tc2)
plot(d$int2)
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
par(mfrow=c(1,1))
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
plot(d$tc1)
par(mfrow=c(2,1))
plot(d$tc1)
plot(d$int1)
plot(d$tc2)
plot(d$int2)
plot(d$tc3)
plot(d$int3)
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip_Route.csv"))
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip_Route.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
par(mfrow=c(3,1))
plot(d$int1)
plot(d$int2)
plot(d$int3)
size(import)
length(import)
import = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip_Route.csv"))
length(import)
max(import)
rows(import)
row(import)
rows
import.rows
plot(d$tc1)
plot(d$int1)
par(mfrow=c(2,1))
plot(d$tc1)
plot(d$int1)
plot(d$tc2)
plot(d$int2)
plot(d$tc3)
plot(d$int3)
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip_Route.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
par(mfrow=c(1,1))
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
par(mfrow=c(3,1))
plot(d$int1)
plot(d$int2)
plot(d$int3)
par(mfrow=c(2,1))
plot(d$tc1)
plot(d$int1)
plot(d$tc2)
plot(d$int2)
plot(d$tc3)
plot(d$int3)
par(mfrow=c(2,1))
plot(d$int1)
plot(d$tc1)
plot(d$int2)
plot(d$tc2)
plot(d$int3)
plot(d$tc3)
d = data.frame(read.csv("test_10ohm_air_noRes_inWater_typeT_onChip_Route_probes.csv"))
names(d) <- c("tc1", "tc2", "tc3", "int1", "int2", "int3")
par(mfrow=c(1,1))
plot(d$tc1, col="red", ylim=c(16, 27))
points(d$int1, col="green")
par(mfrow=c(3,1))
plot(d$int1)
plot(d$int2)
plot(d$int3)
par(mfrow=c(2,1))
plot(d$int1)
plot(d$tc1)
plot(d$int2)
par(mfrow=c(2,1))
plot(d$int1)
plot(d$tc1)
plot(d$int2)
plot(d$tc2)
plot(d$int3)
plot(d$tc3)
